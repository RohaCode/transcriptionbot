from aiogram import Router
from aiogram.types import Message
from aiogram import F
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.filters import StateFilter

from utils.language import get_text, get_user_language_from_db
from handlers.transcription_handler import TranscriptionState
from keyboards.main_menu import get_main_keyboard
from database.database import get_async_db

router = Router()


@router.message(F.text.in_(["üé§ –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞—Ç—å", "üé§ Transcribe"]))
async def handle_transcribe_button(message: Message, state: FSMContext):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ '–¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞—Ç—å' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
    async with get_async_db() as db:
        lang = await get_user_language_from_db(db, message.from_user.id)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞
        await state.set_state(TranscriptionState.waiting_for_file)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –ø—Ä–∏—Å–ª–∞—Ç—å —Ñ–∞–π–ª –∏ —É–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        text = get_text("send_audio_video", lang)
        
        await message.answer(text, reply_markup=ReplyKeyboardRemove())


@router.message(F.text.in_(["–û—Ç–º–µ–Ω–∞", "Cancel"]))
async def handle_cancel_from_any_state(message: Message, state: FSMContext):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ '–û—Ç–º–µ–Ω–∞' –∏–∑ –ª—é–±–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    async with get_async_db() as db:
        lang = await get_user_language_from_db(db, message.from_user.id)
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await message.answer(
            text=get_text("transcription_canceled", lang),
            reply_markup=get_main_keyboard(lang)
        )


@router.message()
async def handle_message_without_state(message: Message, state: FSMContext):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    current_state = await state.get_state()
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞, –Ω–æ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –∞—É–¥–∏–æ/–≤–∏–¥–µ–æ/–¥–æ–∫—É–º–µ–Ω—Ç/–≥–æ–ª–æ—Å–æ–≤–æ–µ
    if current_state != TranscriptionState.waiting_for_file and (message.audio or message.video or message.document or message.voice):
        async with get_async_db() as db:
            lang = await get_user_language_from_db(db, message.from_user.id)
            text = get_text("this_does_not_work", lang)
            await message.answer(text, reply_markup=get_main_keyboard(lang)) # Added keyboard
    # –í–æ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –æ—Ç–≤–µ—á–∞–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞
    else:
        async with get_async_db() as db:
            lang = await get_user_language_from_db(db, message.from_user.id)
            text = get_text("unknown_command", lang)
            await message.answer(text, reply_markup=get_main_keyboard(lang)) # Added keyboard